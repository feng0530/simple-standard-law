<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tw.idv.frank.simple_standard_law.schema.system.model.dao.UsersRoleMapper">
  <resultMap id="BaseResultMap" type="tw.idv.frank.simple_standard_law.schema.system.model.entity.UsersRole">
    <id column="user_role_id" jdbcType="INTEGER" property="userRoleId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_role_id, user_id, role_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system.users_role
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from system.users_role
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="tw.idv.frank.simple_standard_law.schema.system.model.entity.UsersRole">
    insert into system.users_role (user_role_id, user_id, role_id, 
      create_time)
    values (#{userRoleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="tw.idv.frank.simple_standard_law.schema.system.model.entity.UsersRole">
    insert into system.users_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userRoleId != null">
        user_role_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userRoleId != null">
        #{userRoleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tw.idv.frank.simple_standard_law.schema.system.model.entity.UsersRole">
    update system.users_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tw.idv.frank.simple_standard_law.schema.system.model.entity.UsersRole">
    update system.users_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_role_id = #{userRoleId,jdbcType=INTEGER}
  </update>
</mapper>